/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.webshopping.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.validator.DynaValidatorForm;
import org.webshopping.bean.Users;

/**
 * MyEclipse Struts Creation date: 04-02-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/register" name="registerForm" input="/register.jsp"
 *                scope="request" validate="true"
 */
public class RegisterAction extends UserBaseAction {
	/*
	 * Generated Methods
	 */

	/**
	 * 用户注册
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		DynaValidatorForm registerForm = (DynaValidatorForm) form;

		String username = registerForm.getString("username");
		if (this.iuserService.userIsExist(username)) {
			/* 用户名已存在 */
			ActionMessages error = new ActionMessages();
			error.add("username",
					new ActionMessage("registerForm.err.username"));
			this.addErrors(request, error);
			return mapping.getInputForward();
		} else {
			Users user = new Users();
			user.setUsername(registerForm.getString("username"));
			user.setPassword(registerForm.getString("password"));
			user.setQuestion(registerForm.getString("question"));
			user.setAnswer(registerForm.getString("answer"));
			user.setEmail(registerForm.getString("email"));
			// user.setAddress(registerForm.getString("address"));
			// user.setPhone(registerForm.getString("phone"));
			this.iuserService.register(user);
			request.getSession().setAttribute("username", username);
			return mapping.findForward("lastPage");
		}

	}
}